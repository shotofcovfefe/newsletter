/* 1. Tailwind Directives - These MUST be at the very top */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* 2. Restore @import "tailwindcss"; - This seems crucial for your build */
@import "tailwindcss";

/* 3. Default (Light) Theme CSS Variables */
:root {
  --background: #ffffff; /* White background for light mode */
  --foreground: #171717; /* Dark text for light mode */
  /* Add any other global light theme CSS variables you might need for other elements */
}

/* 4. Dark Theme CSS Variables - Applied ONLY when <html> has class="dark" */
html.dark {
  --background: #0a0a0a; /* Very dark grey/black background for dark mode */
  --foreground: #ededed; /* Light grey text for dark mode */
  /* Add any other global dark theme CSS variables you might need for other elements */
}

html:not(.dark) body {
  background-color: #ffffff !important; /* Forcing white background */
  color: #171717 !important;           /* Forcing dark text */
}

/* 5. Apply CSS Variables to the body - MODIFIED */
body {
  /* REMOVED: background-color: var(--background); */
  /* REMOVED: color: var(--foreground); */
  /* Let Tailwind classes on the <body> tag in layout.tsx handle these. */
  /* You can still set other base body styles here if needed, e.g., default font if not handled by Tailwind's base or layout.tsx */
}

/* The "@theme inline" block is still commented out as it's non-standard
   and references undefined font variables. If this approach works,
   you can decide if you need this block or how to integrate its purpose. */
/*
@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}
*/

/* --- All your other existing styles (fogwrapper, keyframes, etc.) should remain below this line --- */

.fogwrapper {
  height: 100%;
  position: absolute;
  top: 0;
  width: 100%;
  filter: blur(1px) grayscale(0.2) saturate(1.2) sepia(0.2);
  pointer-events: none;
  z-index: 40;
  overflow-x: hidden;
}
#foglayer_01, #foglayer_02, #foglayer_03 {
  height: 100%;
  position: absolute;
  width: 200%;
}
.fog .image01, .fog .image02 {
  float: left;
  height: 100%;
  width: 50%;
}
#foglayer_01 {
  animation: foglayer_01_opacity 10s linear infinite,
             foglayer_moveme 45s linear infinite;
}
#foglayer_02,
#foglayer_03 {
  animation: foglayer_02_opacity 30s linear infinite,
             foglayer_moveme 60s linear infinite;
}

#foglayer_01 .image01, #foglayer_01 .image02 {
  background: url("/textures/fog1.png") center center/cover no-repeat transparent;
}
#foglayer_02 .image01, #foglayer_02 .image02,
#foglayer_03 .image01, #foglayer_03 .image02 {
  background: url("/textures/fog2.png") center center/cover no-repeat transparent;
}

/* Opacity keyframes */
@keyframes foglayer_01_opacity {
  0% { opacity: 0.3; }
  22% { opacity: 0.6; }
  40% { opacity: 0.5; }
  58% { opacity: 0.7; }
  80% { opacity: 0.5; }
  100% { opacity: 0.3; }
}
@keyframes foglayer_02_opacity {
  0% { opacity: .5; } 25% { opacity: .2; } 50% { opacity: .1; }
  80% { opacity: .3; } 100% { opacity: .5; }
}
@keyframes foglayer_03_opacity {
  0% { opacity: .8; } 27% { opacity: .2; } 52% { opacity: .6; }
  68% { opacity: .3; } 100% { opacity: .8; }
}
@keyframes foglayer_moveme {
  0% { left: 0; } 100% { left: -100%; }
}

/* Mobile: stretch fog */
@media (max-width: 767px) {
  .fog .image01, .fog .image02 {
    width: 100%;
  }
}

@keyframes tiny-confetti-pop {
  0%   { opacity:1; transform: translate3d(0,0,0) scale(1) rotate(var(--angle)); }
  70%  { opacity:1; transform: translate3d(var(--dx),var(--dy),0) scale(1) rotate(var(--angle)); }
  100% { opacity:0; transform: translate3d(calc(var(--dx)*1.1),calc(var(--dy)*1.1),0) scale(.6) rotate(var(--angle)); }
}

.three-line-clamp {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@keyframes fade-up {
  from { opacity: 0; transform: translateY(20px); }
  to   { opacity: 1; transform: translateY(0); }
}
.animate-fade-up {
  animation: fade-up 0.6s ease-out both;
}
